version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: blog_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: blog
      MYSQL_USER: ${MYSQL_USER:-wukazi}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-rewink123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - blog_network_prod
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # PHP应用服务
  app:
    build: .
    container_name: blog_app_prod
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./logs:/var/log/apache2
    depends_on:
      - mysql
    networks:
      - blog_network_prod
    environment:
      - DB_HOST=mysql
      - DB_NAME=blog
      - DB_USER=${MYSQL_USER:-wukazi}
      - DB_PASS=${MYSQL_PASSWORD:-rewink123}
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: blog_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - blog_network_prod
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  mysql_data_prod:
    driver: local

networks:
  blog_network_prod:
    driver: bridge
